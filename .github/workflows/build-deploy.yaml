name: Build and Deploy to OKE

permissions:
  contents: write
  
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  REPO_NAME: "hako-agent"
  IMAGE_NAME: "hako-agent:latest"
  IMAGE_TAG: "hako-agent:${{ github.sha }}"
  OCIR_ENDPOINT: "ord.ocir.io"
  K8S_NAMESPACE: "default"
  DEPLOYMENT_NAME: "hako-agent"
  CONTAINER_NAME: "hako-agent"
  VERSION: ${{ github.sha }}
  OCI_CLI_REGION: "us-chicago-1"
jobs:
  build-deploy:
    if: "!contains(github.event.head_commit.message, 'Update image tag')"
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install kubectl
      run: |
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/kubectl
        kubectl version --client

    - name: 'Write Config & Key Files'
      run: |
        mkdir ~/.oci
        echo "${{secrets.OCI_CLI_KEY_CONTENT}}" >> ~/.oci/key.pem

        echo "[DEFAULT]" >> ~/.oci/config
        echo "user=${{secrets.OCI_CLI_USER}}" >> ~/.oci/config
        echo "fingerprint=${{secrets.OCI_CLI_FINGERPRINT}}" >> ~/.oci/config
        echo "tenancy=${{secrets.OCI_CLI_TENANCY}}" >> ~/.oci/config
        echo "region=${{env.OCI_CLI_REGION}}" >> ~/.oci/config         
        echo "key_file=~/.oci/key.pem" >> ~/.oci/config

    - name: 'Install OCI CLI'
      run: |
        curl -L -O https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh
        chmod +x install.sh
        ./install.sh --accept-all-defaults          
        export PATH=$PATH:/home/runner/bin
        exec -l $SHELL

    - name: 'Fix Config File Permissions'
      run: |
          export PATH=$PATH:/home/runner/bin
          oci setup repair-file-permissions --file ~/.oci/key.pem
          oci setup repair-file-permissions --file ~/.oci/config
          cd ~/.oci
          pwd

    - name: Configure kubeconfig
      run: |
        mkdir -p $HOME/.kube
        echo "${{ secrets.KUBECONFIG_DATA }}" | base64 -d > $HOME/.kube/config

    - name: Build the Docker image
      run: docker build . --file Dockerfile -t ${{ env.IMAGE_TAG }}

    - name: Login to OCIR
      run: echo "${{ secrets.OCI_AUTH_TOKEN }}" | docker login ${{ env.OCIR_ENDPOINT }} -u "${{ secrets.OCI_STORAGE_NAMESPACE }}/${{ secrets.OCI_EMAIL }}" --password-stdin

    - name: Tag the Docker image
      run: 
        docker tag ${{ env.IMAGE_TAG }} ${{ env.OCIR_ENDPOINT }}/${{ secrets.OCI_STORAGE_NAMESPACE }}/${{ env.REPO_NAME }}/${{ env.IMAGE_TAG }}

    - name: Push the Docker image
      run: docker push ${{ env.OCIR_ENDPOINT }}/${{ secrets.OCI_STORAGE_NAMESPACE }}/${{ env.REPO_NAME }}/${{ env.IMAGE_TAG }}

    - name: Replace image tag in deploy.yaml
      run: |
        sed -i "s|image: .*/hako-agent:.*|image: us-chicago-1.ocir.io/ax7oybsfq96x/hako-agent/hako-agent:${{ github.sha }}|" k8s/deployment.yaml
  
    - name: Commit updated deployment.yaml
      run: |
        git config --global user.name "github-actions"
        git config --global user.email "github-actions@github.com"
        git add k8s/deployment.yaml
        git commit -m "Update image tag to ${{ github.sha }}"
        git push

    - name: Deploy new image to OKE
      run: |
        export PATH=$PATH:/home/runner/bin
        kubectl set image deployment/${{ env.DEPLOYMENT_NAME }} \
          ${{ env.CONTAINER_NAME }}=${{ env.OCIR_ENDPOINT }}/${{ secrets.OCI_STORAGE_NAMESPACE }}/${{ env.REPO_NAME }}/${{ env.IMAGE_TAG }} \
          --namespace ${{ env.K8S_NAMESPACE }}

    - name: Wait for rollout to finish
      run: |
        export PATH=$PATH:/home/runner/bin
        kubectl rollout status deployment/${{ env.DEPLOYMENT_NAME }} --namespace=${{ env.K8S_NAMESPACE }}